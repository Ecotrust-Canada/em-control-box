#!/bin/bash

MODULES_DIR="`dirname $0`/modules"
BOARDS="pro328 pro5v328 promicro16" # arduino boards we use

eval "`/opt/em/bin/em-rec --dump-config`"

if [ "${CRON}" != "true" ]; then
	source /etc/colors
fi

OK="[ ${txtgrn}OK${txtrst} ]"
STAR="${txtgrn}*${txtrst}"

function register_modules {
    for FILE in `ls ${MODULES_DIR}/*.sh`; do
        source ${FILE}
        _MODULES="${_MODULES} ${NAME}"
    done
}

function show_versioninfo {
	echo -e "${bldgrn}EM toolbox, Copyright 2012, Ecotrust Canada${txtrst}"
}

function show_help {
	show_versioninfo >&2
	echo "Usage: ${0##*/} [module] [param] ..." >&2
	echo >&2
	echo "Available modules:" >&2
	echo >&2
	for MODULE in ${_MODULES}; do
		desc="${MODULE}_description"
		TABS="\t"
		if [ ${#MODULE} -le 7 ]; then
			TABS="\t\t"
		fi
		echo -e "\t${bldwht}$MODULE${TABS}${txtrst}${!desc}" >&2
	done
	echo >&2
	echo "For help specific to a module, please run" >&2
	echo -e "\t${0##*/} [module] help" >&2
	exit 1
}

register_modules

if [ -n "${1}" -a "${1}" != "help" ]; then
	MODULE=${1}
else
	show_help
fi
shift

if [ "${1}" == "help" ]; then
	usage="${MODULE}_usage"
	if [ -n "${!usage}" ]; then
		echo -e ${!usage}
	else
		echo -e "Usage: ${bldwht}em ${MODULE} ${bldred}(takes no parameters)${txtrst}"
	fi
	exit 1
else
	declare -f ${MODULE}_start > /dev/null
	if [ ${?} -eq 0 ]; then
		eval ${MODULE}_start '${@}'
	else
		echo -e "${bldred}Module '${bldwht}${MODULE}${bldred}' does not exist${txtrst}"
		exit 1
	fi
fi

